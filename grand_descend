import numpy as np

def gradient(x, A, b):
	element_1 = np.dot(np.transpose(A),np.dot(A, x))
	element_2 = np.dot(np.transpose(A), b)
	return element_1 - element_2

A_coef = np.array([[2.0, 1.0, -3.0], [5.0, -4.0, 1.0], [1.0, -1.0, -4.0]])
b_coef = np.array([7.0, -19.0, 4.0])

x_sol = np.array([1.0, 1.0, 1.0])

itmax=1000
k = 0.002 
def linear_solver(A,b,x_sol,umbral,itmax):
 for i in range(itmax):
	 print(x_sol)
	 x_sol = x_sol  - k * gradient(x_sol, A_coef, b_coef)

print(np.dot(A_coef,x_sol))
linear_solver(A_coef, b_coef, x_sol,0.001,10000)
